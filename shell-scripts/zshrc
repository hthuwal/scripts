# zmodload zsh/zprof

# ############################################################################ #
#                                     KEYS                                     #
# ############################################################################ #

# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -g -A key

key[Home]="${terminfo[khome]}"
key[End]="${terminfo[kend]}"
key[Insert]="${terminfo[kich1]}"
key[Backspace]="${terminfo[kbs]}"
key[Delete]="${terminfo[kdch1]}"
key[Up]="${terminfo[kcuu1]}"
key[Down]="${terminfo[kcud1]}"
key[Left]="${terminfo[kcub1]}"
key[Right]="${terminfo[kcuf1]}"
key[PageUp]="${terminfo[kpp]}"
key[PageDown]="${terminfo[knp]}"
key[ShiftTab]="${terminfo[kcbt]}"

# ############################################################################ #
#                          SCRIPTS, ALIASES, FUNCTIONS                         #
# ############################################################################ #


local scripts="$HOME/dev/scripts/shell-scripts"
local work_scripts="$HOME/work/for-work-by-me/work-scripts/bash-scripts/work.sh"

if [[ -f "$work_scripts" ]]; then
	source "$work_scripts"
fi


if [[ "$OSTYPE" == "darwin"* ]]; then
	test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
	export PATH="$PATH:/Applications/Visual Studio Code - Insiders.app/Contents/Resources/app/bin"
elif [[ -n "$WSL_DISTRO_NAME" ]]; then
	export PATH="/home/linuxbrew/.linuxbrew/opt/openjdk@11/bin:$PATH"
	export JAVA_HOME="/home/linuxbrew/.linuxbrew/opt/openjdk@11"
	export JDK_HOME="/home/linuxbrew/.linuxbrew/opt/openjdk@11"
fi

source "$scripts/aliases.sh"
source "$scripts/functions.sh"
source "$scripts/ffmpeg_utils.sh"
source "$scripts/kube.sh"
source "$scripts/git_functions.sh"

export GOPATH=$HOME/go
export PATH="/usr/local/opt/go@1.13/bin:$PATH"
export PATH=/usr/local/sbin:$HOME/bin:$HOME/.local/bin:$GOPATH/bin:$PATH

# Kill entire arguments on pressing Ctrl + W
# autoload -U select-word-style
# select-word-style s
# select-word-style n

# Special shellcharacters to be quotes automatically in URLs
autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic

# ############################################################################ #
#                                   OH-MY-ZSH                                  #
# ############################################################################ #

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"
ENABLE_CORRECTION="false"

# ------------------------------ OH-MY-ZSH THEME ----------------------------- #

ZSH_THEME='candy'

# ----------------------------- OH-MY-ZSH PLUGINS ---------------------------- #

plugins=(
	# node npm
	copyfile
	docker
	colored-man-pages command-not-found

	# Python
	python pip pep8 pylint pyenv

	# From https://github.com/zsh-users/
	zsh-syntax-highlighting 
	zsh-completions 
	zsh-autosuggestions
	history-substring-search
	zsh-interactive-cd
	
	#json
	# jsontools
	
	# From https://github.com/skywind3000/z.lua
	z.lua
)

# Load oh-my-zsh
source $ZSH/oh-my-zsh.sh

# ############################################################################ #
#                              CUSTOM KEYBINDINGS                              #
# ############################################################################ #

# Bind Keys to history-substring-search

if [[ "$OSTYPE" == "darwin"* ]]; then
	# Option + Up and Option + Down on mac
	bindkey '^[[1;5A' history-substring-search-up
	bindkey '^[[1;5B' history-substring-search-down
elif [[ "$OSTYPE" == "linux-gnu" ]]; then
	# Ctrl + Up and Ctrl + Down on non-mac
	bindkey '^[[1;5A' history-substring-search-up
	bindkey '^[[1;5B' history-substring-search-down
fi

# Restore Default up and Down to beginning with search
[[ -n "${key[Up]}"   ]] && bindkey -- "${key[Up]}"   up-line-or-beginning-search
[[ -n "${key[Down]}" ]] && bindkey -- "${key[Down]}" down-line-or-beginning-search


# --------------------------- GOTO PARENT, GO BACK --------------------------- #

cdUndoKey() {
	popd
	clear
	zle       reset-prompt
}

cdParentKey() {
	pushd ..
	clear
	zle      reset-prompt
}

zle -N                 cdParentKey
zle -N                 cdUndoKey


if [[ "$OSTYPE" == "darwin"* ]]; then
	# TODO: WTH are these key combinations
	bindkey '^[^[[A'      cdParentKey
	bindkey '^[^[[B'      cdUndoKey
elif [[ "$OSTYPE" == "linux-gnu" ]]; then
	bindkey '^[[1;3A'      cdParentKey
	bindkey '^[[1;3D'      cdUndoKey
fi

# ############################################################################ #
#                       CUSTOM ENV VARIABLES AND OPTIONS                       #
# ############################################################################ #

export LDFLAGS="-L/usr/local/opt/qt/lib"
export CPPFLAGS="-I/usr/local/opt/qt/include"
export BAT_PAGER="less -R"

export HISTSIZE=100000
export HISTFILESIZE=100000
export HISTFILE=~/.zhistory

setopt HIST_FIND_NO_DUPS
# unsetopt share_history

# ############################################################################ #
#                                     HACKS                                    #
# ############################################################################ #

# ---------------------- MAKE PAINFULLY SLOW PASTE FAST ---------------------- #

# https://github.com/zsh-users/zsh-autosuggestions/issues/238#issuecomment-389324292

# This speeds up pasting with autosuggest
# https://github.com/zsh-users/zsh-autosuggestions/issues/238
pasteinit() {
	OLD_SELF_INSERT=${${(s.:.)widgets[self-insert]}[2,3]}
	zle -N self-insert url-quote-magic
}

pastefinish() {
	zle -N self-insert $OLD_SELF_INSERT
}
zstyle :bracketed-paste-magic paste-init pasteinit
zstyle :bracketed-paste-magic paste-finish pastefinish

# -------------------------- REMOVE WEIRD LS COLORS -------------------------- #

# http://stackoverflow.com/a/14864141
PROMPT_EOL_MARK=''

export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;40:ow=01;34:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lz=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:';

# Use same colors for zsh autocompletion
# https://github.com/twam/.dotfiles/blob/master/ls_colors/ls_colors.zsh#L19-L23

# zmodload -a colors
# zmodload -a autocomplete
# zmodload -a complist
# zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
